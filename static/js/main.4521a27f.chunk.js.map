{"version":3,"sources":["CounterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["CounterComponent","props","handleIncrement","setState","initialValue","state","handleDecrement","handleReset","this","componentName","onClick","Component","App","a","b","console","log","className","style","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","institute","document","getElementById"],"mappings":"2PAiCeA,E,kDA9BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,gBAAkB,WACd,EAAKC,SAAS,CAACC,aAAc,EAAKC,MAAMD,aAAe,KARxC,EAUnBE,gBAAkB,WACd,EAAKH,SAAS,CAACC,aAAc,EAAKC,MAAMD,aAAe,KAXxC,EAanBG,YAAc,WACZ,EAAKJ,SAAS,CAACC,aAAc,KAZ3B,EAAKC,MAAQ,CACTD,aAAc,GAHH,E,0CAgBnB,WACI,OACI,qCACA,+BAAKI,KAAKP,MAAMQ,cAAhB,gBACA,kDAAqBD,KAAKH,MAAMD,gBAChC,wBAAQM,QAASF,KAAKN,gBAAtB,uBAHA,QAIA,wBAAQQ,QAASF,KAAKF,gBAAtB,uBAJA,QAKA,wBAAQI,QAASF,KAAKD,YAAtB,0B,GAxBmBI,aCkBhBC,MAjBf,YAA+B,IAGhBC,EAAEC,EAHHL,EAAgB,EAAhBA,cAQZ,OAPAM,QAAQC,IAAIP,GAQV,sBAAKQ,UAAU,MAAMC,MAAO,CAACC,QAAS,QAAtC,qBACWV,EADX,cACoC,uBADpC,IAC2C,uBAD3C,qBANWI,EAQa,EARXC,EAQa,EAPnBD,EAAEC,GAQP,cAAC,EAAD,CAAkBL,cAAc,gBCHvBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKtB,cAAe,aAAcuB,UAAU,WAE9CC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.4521a27f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass CounterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialValue: 5 \r\n        }\r\n    } \r\n\r\n    handleIncrement = () => {\r\n        this.setState({initialValue: this.state.initialValue + 1})\r\n    }\r\n    handleDecrement = () => {\r\n        this.setState({initialValue: this.state.initialValue - 1})\r\n    }\r\n    handleReset = () => {\r\n      this.setState({initialValue: 5})\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>{this.props.componentName} Component</h2>\r\n            <h4>Initial Value : {this.state.initialValue}</h4>\r\n            <button onClick={this.handleIncrement}>Increment</button> &nbsp;\r\n            <button onClick={this.handleDecrement}>Decrement</button> &nbsp;\r\n            <button onClick={this.handleReset}>Reset</button>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterComponent;","import './App.css';\nimport CounterComponent from './CounterComponent';\n\nfunction App({componentName}) {\n  console.log(componentName);\n\n  const sum = (a,b) => {\n    return a+b\n  }\n\n\n  return (\n    <div className=\"App\" style={{padding: '30px'}}>\n      This is {componentName} component <br /> <br />\n      The sum value is {sum(3,4)}\n      <CounterComponent componentName=\"Counter\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App componentName={\"Functional\"} institute=\"Guvi\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}