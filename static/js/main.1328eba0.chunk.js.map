{"version":3,"sources":["CounterComponent.js","Card.js","App.js","reportWebVitals.js","index.js"],"names":["CounterComponent","props","handleIncrement","setState","initialValue","state","handleDecrement","handleReset","console","log","toBeUpdatedValue","this","componentName","onClick","Component","CardComponent","useState","toggle","setToggle","useEffect","Card","sx","minWidth","CardContent","Typography","gutterBottom","heading","variant","component","mb","color","subheading","description","CardActions","toggleFunctionality","Button","size","App","a","b","toggleCounterComponent","setToggleCounterComponent","toggleCard","setToggleCard","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","institute","document","getElementById"],"mappings":"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","file":"static/js/main.1328eba0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass CounterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialValue: 5 \r\n        }\r\n    } \r\n\r\n    componentDidMount () {\r\n        console.log(\"Mounting Phase , componentDidMount\")\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        console.log(\"Updating Phase , componentDidUpdate\")\r\n    }\r\n\r\n    shouldComponentUpdate (props , toBeUpdatedValue) {\r\n        console.log(toBeUpdatedValue)\r\n        if(toBeUpdatedValue.initialValue < 0) {\r\n            return false;\r\n        }\r\n        else\r\n        return true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        console.log(\"Unmounting Phase , componentWillUnmount\")\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        this.setState({initialValue: this.state.initialValue + 1})\r\n    }\r\n    handleDecrement = () => {\r\n        this.setState({initialValue: this.state.initialValue - 1})\r\n    }\r\n    handleReset = () => {\r\n      this.setState({initialValue: 5})\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>{this.props.componentName} Component</h2>\r\n            <h4>Initial Value : {this.state.initialValue}</h4>\r\n            <button onClick={this.handleIncrement}>Increment</button> &nbsp;\r\n            <button onClick={this.handleDecrement}>Decrement</button> &nbsp;\r\n            <button onClick={this.handleReset}>Reset</button>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterComponent;","import React,{useState, useEffect} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function CardComponent(props) {\r\n\r\n         const [toggle , setToggle] = useState(true);\r\n\r\n         const toggleFunctionality = () => {\r\n             props.toggleFunctionality(!toggle);\r\n             setToggle(!toggle)\r\n         }\r\n\r\n\r\nuseEffect(()=>{\r\n  console.log(\"Mounting phase\")\r\n}, [])\r\n\r\nuseEffect(()=>{\r\n  return() =>{\r\n  console.log(\"Unmounting phase\")\r\n  }\r\n}, [])\r\n\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography  gutterBottom>\r\n          {props.heading}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        </Typography>\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          {props.subheading}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {props.toggleFunctionality ? \r\n          <Button size=\"small\" onClick={() => toggleFunctionality()}>Mount / UnMount</Button>:\r\n          <Button> ABOUT US </Button>}\r\n      </CardActions>\r\n     </Card>\r\n  );\r\n  }\r\n\r\n","import React, {useState, useEffect } from 'react';\nimport './App.css';\nimport CounterComponent from './CounterComponent';\nimport CardComponent from './Card';\n\nfunction App({props}) {\n  const [toggleCounterComponent, setToggleCounterComponent] = useState(true);\n  const [toggleCard, setToggleCard] = useState(true);\n\n  useEffect(() => {\n    console.log(\"mounting and updating phase\");\n  })\n\n  useEffect(() => {\n    console.log(\"only mounting phase\");\n  },[])\n\n  useEffect(()=>{\n    console.log(\"mounting and updating phase of toggleCounterComponent\");\n  },[toggleCounterComponent])\n\n  useEffect(()=>{\n    console.log(\"toggleCard\")\n  },[toggleCard])\n\n\n  useEffect(() => {\n    console.log(\"mounting and updating phase of both toggleCounterComponent and toggleCard\")\n  },[toggleCounterComponent,toggleCard])\n\n\n  const sum = (a,b) => {\n    return a+b\n\n  }\n\n  const toggleComponent = (valueFromChild) => {\n    setToggleCounterComponent(!valueFromChild);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => setToggleCard(!toggleCard)}>card</button><br />\n      {toggleCard ? <CardComponent heading=\"App component\" subheading=\"Home component\"\n      description=\"this is home component\" \n      toggleFunctionality={(toggle)=> toggleComponent(toggle)}/>:<></>}\n      <br /> \n      The sum value is {sum(3,4)} <br/>\n      {toggleCounterComponent ? <CounterComponent componentName=\"Counter\" />:<></>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App componentName={\"Functional\"} institute=\"Guvi\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}